package GUI;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jorge Eduardo
 */
public class TableHelp extends javax.swing.JFrame {
    public ArrayList <Casillero> casilleros;
    /**
     * Creates new form NewJFrame
     */
    public TableHelp() {
        initComponents();
    }
     /**
     * Creates new form NewJFrame
     * @param casillero
     */
    public TableHelp(ArrayList <Casillero> casillero) {
        this.casilleros=casillero;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /** Método que solicita la fecha al sistema.
     * @return String de la fecha del sistema
     */
    public String getSystemDate(){
        Date date= new Date();
        SimpleDateFormat format= new SimpleDateFormat("dd/MM/yyyy");
        return format.format(date);
    }
    /** Función que inserta los popUp menus a las tablas 
     * @param tabla
     * No Retorna.
     */
    public void popupTable(javax.swing.JTable tabla){
        JPopupMenu popupMenu= new JPopupMenu();
        
        JMenuItem menuItem1= new JMenuItem("Detelle del monto",new ImageIcon(getClass().getResource("/GUI/blueMoneda.png")));
         
        menuItem1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                JOptionPane.showMessageDialog(null,"Aquí va el detalle del monto","Mensaje",JOptionPane.INFORMATION_MESSAGE);
            }
        });
        popupMenu.add(menuItem1);
        tabla.setComponentPopupMenu(popupMenu);
    }

    /** Recibe la tabla, el campo con la fecha, los datos correspondientes y una matriz vacía para poder mostrar los datos en la tabla
     * @param tabla
     * @param dateChooser
     * @param Datos
     * @param dataShow
     * @return dataShow modificado con los nuevos datos
     */
    public String[][] showData(javax.swing.JTable tabla, com.toedter.calendar.JDateChooser dateChooser, String[][] Datos, String[][] dataShow){
            DefaultTableModel model  = (DefaultTableModel) tabla.getModel();
            String[] osl= {"Propietario","Nivel","Tipo artículo","Monto","Fecha"};
            CompraVenta systemDate= new CompraVenta();
            SimpleDateFormat date= new SimpleDateFormat("dd/MM/yyyy");
            String fechaString= date.format(dateChooser.getDate());
            //String[][] Datos= {{"Juan Mata","Oro","Sobre","0.99","15/04/2018"},{"Mauricio Áviles","Platino","Electronico","1.20","15/04/2018"},{"Yossi Mejía","Normal","Silla de LoL","2.05",systemDate.getSystemDate()},{"Mario Camacho","Oro","sobre","0.26","16/04/2018"},{"Yosua Díaz","Normal","Electrónicos","3.25",systemDate.getSystemDate()},{"Jorge Gutiérrez","Platino","Gorro","1.26","16/04/2018"} };
            int c=0;
            if(c<Datos.length){
                for(int i=0; i<Datos.length;i++){
                    //System.out.println(Datos[i][5]+"---"+fechaString);
                    if(fechaString.equals(Datos[i][4])){
                        //System.out.println(Datos[i][4]+"___"+fechaString);
                        dataShow[c]=Datos[i];
                        c++;
                        //System.out.println(c);
                    }
                }
            }
            model.setDataVector(dataShow, osl);
            return dataShow;
    }
    //**********************
    public String[][] showData(javax.swing.JTable tabla,String CasilleroID, String[][] Datos, String[][] dataShow){
            DefaultTableModel model  = (DefaultTableModel) tabla.getModel();
            String[] osl= {"Propietario","Nivel","Tipo artículo","Monto","Pendiente"};
            CompraVenta systemDate= new CompraVenta();
            int c=0;
            if(c<Datos.length){
                for(int i=0; i<Datos.length;i++){
                    //System.out.println(Datos[i][5]+"---"+fechaString);
                    for (int j = 0; j < this.casilleros.size();j++){
                        String IDs = this.casilleros.get(i).getUsuario().getIdentificacion();
                        //falta definir el del número de casillero y meter la condición en el if del ||
                        if(CasilleroID.equals(IDs)){
                            dataShow[c]=Datos[i];
                            c++;
                            }
                            
                        //System.out.println(c);
                    }
                }
            }
            model.setDataVector(dataShow, osl);
            return dataShow;
        }
       
    public String[][] getArtículosCasillero(String IDCasillero){
        String[][] Datos= new String[50][50];
        int pos= 0;
        String estado="Pendiente";
        int CasilleroID= Integer.parseInt(IDCasillero);
        for (int i = 0; i < this.casilleros.size();i++){
            ArrayList<Articulo> pendientes = this.casilleros.get(i).usuario.cuentas;
            for(int m=0; m < pendientes.size();m++) {
                if(this.casilleros.get(m).getUsuario().getIdentificacion().equals(CasilleroID) ){//me falta el del Número de casiilero, tengo por ID
                    String nombre =  this.casilleros.get(m).usuario.nombre;
                    String nivel =  this.casilleros.get(m).usuario.nivel;
                    String tipoArticulo = pendientes.get(m).tipoArticulo;
                    int impuesto = pendientes.get(m).impuesto;
                    if (pendientes.get(m).isEntregado()==true){
                        estado= "Entregado";
                    }
                    String impuestoString= Integer.toString(impuesto);
                    String[] datosSalida= {nombre,nivel,tipoArticulo,impuestoString,estado};
                    Datos[pos]=datosSalida;
                    pos++;   
                }
            }
        }
        return Datos;
    }
    
    //**********************
    /** Método encargado de obtener los datos correspondientes a una fecha (ingreso) en específico
     * @param fecha
     * @param args the command line arguments
     * @return 
     */
    public String[][] getArtículosFechaIngreso(String fecha){
        String[][] Datos= new String[50][50];
        int pos= 0;                
        for (int i = 0; i < this.casilleros.size();i++){
            ArrayList<Articulo> pendientes = this.casilleros.get(i).usuario.cuentas;
            for(int m=0; m < pendientes.size();m++) {
                if(pendientes.get(m).fechaIngreso.equals(fecha)){
                    String nombre =  this.casilleros.get(m).usuario.nombre;
                    String nivel =  this.casilleros.get(m).usuario.nivel;
                    String tipoArticulo = pendientes.get(m).tipoArticulo;
                    int impuesto = pendientes.get(m).impuesto;
                    String impuestoString= Integer.toString(impuesto);
                    String[] datosSalida= {nombre,nivel,tipoArticulo,impuestoString,fecha};
                    Datos[pos]=datosSalida;
                    pos++;   
                }
            }
        }
        return Datos;
    }
    
    /** Método encargado de obtener los datos correspondientes a una fecha (Retiro) en específico
     * @param fecha
     * @return
     */
    public String[][] getArtículosFechaRetiro(String fecha){
        String[][] Datos= new String[50][50];
        int pos= 0;                
        for (int i = 0; i < this.casilleros.size();i++){
            ArrayList<Articulo> pendientes = this.casilleros.get(i).usuario.cuentas;
            for(int m=0; m < pendientes.size();m++) {
                if(pendientes.get(m).fechaRetiro.equals(fecha)){
                    String nombre =  this.casilleros.get(m).usuario.nombre;
                    String nivel =  this.casilleros.get(m).usuario.nivel;
                    String tipoArticulo = pendientes.get(m).tipoArticulo;
                    int impuesto = pendientes.get(m).impuesto;
                    String impuestoString= Integer.toString(impuesto);
                    String[] datosSalida= {nombre,nivel,tipoArticulo,impuestoString,fecha};
                    Datos[pos]=datosSalida;
                    pos++;   
                }
            }
        }
        return Datos;
    } 
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TableHelp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TableHelp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TableHelp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TableHelp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TableHelp().setVisible(false);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
